# Generated by Django 4.1.2 on 2022-10-26 21:04

import cmm.models.base.unique_mixin
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='customer code')),
                ('name', models.CharField(max_length=128, verbose_name='customer')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('kigo', models.CharField(blank=True, choices=[('A', '国立大学法人'), ('B', '国立短期大学'), ('C', '国立高等専門学校機構'), ('D', '政府機関'), ('E', '国立研究機関'), ('F', '独立行政法人'), ('G', '公立大学'), ('H', '私立大学'), ('I', '地方自治体'), ('J', '警察')], max_length=2, null=True, verbose_name='kigo')),
                ('old_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='old name')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='address')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
                'db_table': 'mst_customer',
                'ordering': ['code'],
                'permissions': [('export_csv_customer', 'Can export customer csv'), ('import_csv_customer', 'Can import customer csv')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='customer code')),
                ('name', models.CharField(max_length=128, verbose_name='customer')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('kigo', models.CharField(blank=True, choices=[('A', '国立大学法人'), ('B', '国立短期大学'), ('C', '国立高等専門学校機構'), ('D', '政府機関'), ('E', '国立研究機関'), ('F', '独立行政法人'), ('G', '公立大学'), ('H', '私立大学'), ('I', '地方自治体'), ('J', '警察')], max_length=2, null=True, verbose_name='kigo')),
                ('old_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='old name')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='address')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical customer',
                'verbose_name_plural': 'historical customers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoCol',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('teiin_hijokin', models.CharField(choices=[('1', '定員'), ('2', '非常勤')], max_length=5, verbose_name='定員・非常勤')),
                ('col_no', models.IntegerField(blank=True, null=True, verbose_name='項目番号')),
                ('table_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='table id')),
                ('col_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='項目ID')),
                ('col_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='項目名')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動入力項目',
                'verbose_name_plural': 'historical 異動入力項目',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoScreen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('screen_code', models.CharField(max_length=40, verbose_name='画面コード')),
                ('screen_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='画面名')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動情報入力画面',
                'verbose_name_plural': 'historical 異動情報入力画面',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoSyumoku',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=8, verbose_name='code')),
                ('name', models.CharField(max_length=128, verbose_name='異動種目')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('display_ctl', models.CharField(blank=True, max_length=512, null=True, verbose_name='画面制御')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('nnmn_ido_cde', models.CharField(blank=True, max_length=128, null=True, verbose_name='任免異動種目区分')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動種目',
                'verbose_name_plural': 'historical 異動種目',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoSyumokuScreen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動種目の入力画面',
                'verbose_name_plural': 'historical 異動種目の入力画面',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoSyumokuScreenCol',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('edit_type', models.CharField(choices=[('K', '必須(固定)'), ('0', '必須'), ('1', '任意'), ('3', '表示のみ'), ('9', '非表示'), ('X', '非表示(固定)')], default='X', max_length=8, verbose_name='制御タイプ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動種目の画面ごと入力項目',
                'verbose_name_plural': 'historical 異動種目の画面ごと入力項目',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIdoType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=5, verbose_name='code')),
                ('name', models.CharField(max_length=128, verbose_name='異動分類')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 異動分類',
                'verbose_name_plural': 'historical 異動分類',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='product code')),
                ('name', models.CharField(max_length=128, verbose_name='product')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('summary', models.CharField(blank=True, max_length=512, null=True, verbose_name='summary')),
                ('product_ver', models.CharField(blank=True, max_length=16, null=True, verbose_name='version')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('product_type', models.CharField(blank=True, choices=[('system', '製品'), ('option', 'オプション')], max_length=32, null=True, verbose_name='product type')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical product',
                'verbose_name_plural': 'historical products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='project code')),
                ('name', models.CharField(max_length=128, verbose_name='project')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('status', models.IntegerField(choices=[(10, '商談中'), (20, '導入中'), (30, '導入済')], verbose_name='status')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProjectProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical project product',
                'verbose_name_plural': 'historical project product',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IdoCol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('teiin_hijokin', models.CharField(choices=[('1', '定員'), ('2', '非常勤')], max_length=5, verbose_name='定員・非常勤')),
                ('col_no', models.IntegerField(blank=True, null=True, verbose_name='項目番号')),
                ('table_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='table id')),
                ('col_id', models.CharField(blank=True, max_length=40, null=True, verbose_name='項目ID')),
                ('col_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='項目名')),
            ],
            options={
                'verbose_name': '異動入力項目',
                'verbose_name_plural': '異動入力項目',
                'db_table': 'mst_ido_col',
                'ordering': ['teiin_hijokin', 'col_no'],
                'permissions': [('export_csv_mst_ido_col', 'Can export mst_ido_col'), ('import_csv_mst_ido_col', 'Can import mst_ido_col')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IdoScreen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('screen_code', models.CharField(max_length=40, verbose_name='画面コード')),
                ('screen_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='画面名')),
            ],
            options={
                'verbose_name': '異動情報入力画面',
                'verbose_name_plural': '異動情報入力画面',
                'db_table': 'mst_ido_screen',
                'ordering': ['screen_code'],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IdoSyumoku',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=8, verbose_name='code')),
                ('name', models.CharField(max_length=128, verbose_name='異動種目')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('display_ctl', models.CharField(blank=True, max_length=512, null=True, verbose_name='画面制御')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('nnmn_ido_cde', models.CharField(blank=True, max_length=128, null=True, verbose_name='任免異動種目区分')),
            ],
            options={
                'verbose_name': '異動種目',
                'verbose_name_plural': '異動種目',
                'db_table': 'mst_ido_syumoku',
                'ordering': ['ido_type__display_order', 'code', 'display_order'],
                'permissions': [('export_csv_mst_ido_syumoku', 'Can export mst_ido_syumoku'), ('import_csv_mst_ido_syumoku', 'Can import mst_ido_syumoku')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IdoSyumokuScreen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
            ],
            options={
                'verbose_name': '異動種目の入力画面',
                'verbose_name_plural': '異動種目の入力画面',
                'db_table': 'mst_ido_syumoku_screen',
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IdoSyumokuScreenCol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('edit_type', models.CharField(choices=[('K', '必須(固定)'), ('0', '必須'), ('1', '任意'), ('3', '表示のみ'), ('9', '非表示'), ('X', '非表示(固定)')], default='X', max_length=8, verbose_name='制御タイプ')),
            ],
            options={
                'verbose_name': '異動種目の画面ごと入力項目',
                'verbose_name_plural': '異動種目の画面ごと入力項目',
                'db_table': 'mst_ido_syumoku_screen_col',
                'ordering': ['ido_syumoku_screen', 'ido_col'],
                'permissions': [('export_csv_mst_ido_syumoku_screen_col', 'Can export mst_ido_syumoku_screen_col'), ('import_csv_mst_ido_syumoku_screen_col', 'Can import mst_ido_syumoku_screen_col')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IdoType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=5, verbose_name='code')),
                ('name', models.CharField(max_length=128, verbose_name='異動分類')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
            ],
            options={
                'verbose_name': '異動分類',
                'verbose_name_plural': '異動分類',
                'db_table': 'mst_ido_type',
                'ordering': ['code', 'display_order'],
                'permissions': [('export_csv_mst_ido_type', 'Can export mst_ido_type'), ('import_csv_mst_ido_type', 'Can import mst_ido_type')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='product code')),
                ('name', models.CharField(max_length=128, verbose_name='product')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('summary', models.CharField(blank=True, max_length=512, null=True, verbose_name='summary')),
                ('product_ver', models.CharField(blank=True, max_length=16, null=True, verbose_name='version')),
                ('display_order', models.IntegerField(blank=True, null=True, verbose_name='display order')),
                ('product_type', models.CharField(blank=True, choices=[('system', '製品'), ('option', 'オプション')], max_length=32, null=True, verbose_name='product type')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mst.product', verbose_name='parent product')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'db_table': 'mst_product',
                'ordering': ['code'],
                'permissions': [('export_csv_product', 'Can export product csv'), ('import_csv_product', 'Can import product csv')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('code', models.CharField(max_length=64, verbose_name='project code')),
                ('name', models.CharField(max_length=128, verbose_name='project')),
                ('abbr', models.CharField(blank=True, max_length=128, null=True, verbose_name='abbreviation')),
                ('status', models.IntegerField(choices=[(10, '商談中'), (20, '導入中'), (30, '導入済')], verbose_name='status')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.customer', verbose_name='customer')),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'db_table': 'mst_project',
                'ordering': ['code'],
                'permissions': [('export_csv_project', 'Can export project csv'), ('import_csv_project', 'Can import project csv')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProjectProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, null=True, verbose_name='version')),
                ('create_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='create time')),
                ('creator', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='creator')),
                ('update_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='update time')),
                ('updater', models.CharField(blank=True, editable=False, max_length=120, null=True, verbose_name='updater')),
                ('valid_flag', models.BooleanField(default=True, verbose_name='valid')),
                ('comment', models.CharField(blank=True, max_length=128, null=True, verbose_name='comment')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.product', verbose_name='product')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.project', verbose_name='project')),
            ],
            options={
                'verbose_name': 'project product',
                'verbose_name_plural': 'project product',
                'db_table': 'mst_project_product',
                'ordering': ['project', 'product'],
                'permissions': [('export_csv_project_product', 'Can export project products csv'), ('import_csv_project_product', 'Can import project products csv')],
            },
            bases=(cmm.models.base.unique_mixin.UniqueConstraintMixin, models.Model),
        ),
        migrations.AddField(
            model_name='project',
            name='products',
            field=models.ManyToManyField(through='mst.ProjectProduct', to='mst.product', verbose_name='project product'),
        ),
        migrations.AddConstraint(
            model_name='idotype',
            constraint=models.UniqueConstraint(fields=('code',), name='mst_ido_type_unique'),
        ),
        migrations.AddField(
            model_name='idosyumokuscreencol',
            name='ido_col',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.idocol', verbose_name='異動項目'),
        ),
        migrations.AddField(
            model_name='idosyumokuscreencol',
            name='ido_syumoku_screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.idosyumokuscreen', verbose_name='異動項目'),
        ),
        migrations.AddField(
            model_name='idosyumokuscreen',
            name='ido_screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mst.idoscreen', verbose_name='異動入力画面'),
        ),
        migrations.AddField(
            model_name='idosyumokuscreen',
            name='ido_syumoku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mst.idosyumoku', verbose_name='異動種目'),
        ),
        migrations.AddField(
            model_name='idosyumoku',
            name='ido_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mst.idotype', verbose_name='異動分類'),
        ),
        migrations.AddConstraint(
            model_name='idoscreen',
            constraint=models.UniqueConstraint(fields=('screen_code',), name='mst_ido_screen_unique'),
        ),
        migrations.AddConstraint(
            model_name='idocol',
            constraint=models.UniqueConstraint(fields=('teiin_hijokin', 'col_no'), name='mst_ido_col_unique'),
        ),
        migrations.AddField(
            model_name='historicalprojectproduct',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprojectproduct',
            name='product',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='historicalprojectproduct',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='customer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.customer', verbose_name='customer'),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproduct',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproduct',
            name='parent',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.product', verbose_name='parent product'),
        ),
        migrations.AddField(
            model_name='historicalidotype',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreencol',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreencol',
            name='ido_col',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.idocol', verbose_name='異動項目'),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreencol',
            name='ido_syumoku_screen',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.idosyumokuscreen', verbose_name='異動項目'),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreen',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreen',
            name='ido_screen',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.idoscreen', verbose_name='異動入力画面'),
        ),
        migrations.AddField(
            model_name='historicalidosyumokuscreen',
            name='ido_syumoku',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.idosyumoku', verbose_name='異動種目'),
        ),
        migrations.AddField(
            model_name='historicalidosyumoku',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalidosyumoku',
            name='ido_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mst.idotype', verbose_name='異動分類'),
        ),
        migrations.AddField(
            model_name='historicalidoscreen',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalidocol',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcustomer',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.UniqueConstraint(fields=('code',), name='mst_customer_unique'),
        ),
        migrations.AddConstraint(
            model_name='projectproduct',
            constraint=models.UniqueConstraint(fields=('project', 'product'), name='mst_project_product_unique'),
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(fields=('code',), name='mst_project_unique'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('code',), name='mst_product_unique'),
        ),
        migrations.AddConstraint(
            model_name='idosyumokuscreencol',
            constraint=models.UniqueConstraint(fields=('ido_syumoku_screen', 'ido_col'), name='mst_ido_syumoku_screen_col_unique'),
        ),
        migrations.AddConstraint(
            model_name='idosyumokuscreen',
            constraint=models.UniqueConstraint(fields=('ido_syumoku', 'ido_screen'), name='mst_ido_syumoku_screen_unique'),
        ),
        migrations.AddConstraint(
            model_name='idosyumoku',
            constraint=models.UniqueConstraint(fields=('ido_type', 'code'), name='mst_ido_syumoku_unique'),
        ),
    ]
